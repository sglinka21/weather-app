{"version":3,"sources":["container/SearchFrom.js","store/actions/weatherActions.js","store/actions/actionTypes.js","hoc/AuxHoc.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/WeatherDetails.js","components/WeatherItem.js","container/WeatherResult.js","App.js","serviceWorker.js","store/reducers/weatherReducer.js","store/reducers/rootReducer.js","index.js"],"names":["SearchFrom","state","city","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","fetchWeatherData","react_default","a","createElement","className","onSubmit","this","htmlFor","type","id","onChange","Component","connect","dispatch","cityName","apiUrl","concat","axios","get","then","response","weather","data","catch","error","aux","children","Backdrop","show","onClick","clicked","bind","index","Modal","UI_Backdrop_Backdrop","modalClosed","colorCard","style","transform","opacity","WeatherDetails","_ref","weatherInfo","dayName","weatherIcon","hideDetails","getHourlyTemp","map","item","key","dt_txt","substr","Math","round","main","temp","maxTemperature","WeatherItem","setColorCardAndIcon","getDay","getWeatherInfo","showDetails","showDetailsHandler","hideDetailsHandler","cardStyle","AuxHoc","avgHumidity","avgWindSpeed","UI_Modal_Modal","src_components_WeatherDetails","WeatherResult","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","showWeatherDetails","showWeatherDetailsHandler","defineProperty","hideWeatherDetailsHandler","groupByDays","reduce","list","forecastDays","push","getDayName","Date","dt","temperature","humidity","windSpeed","el","wind","speed","max","current","next","classNameArray","inherits","createClass","_this2","weatherList","values","weatherData","slice","src_components_WeatherItem","name","App","weatherResult","container_WeatherResult","container_SearchFrom","Boolean","window","location","hostname","match","initState","weatherReducer","undefined","action","objectSpread","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adde9162.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {fetchWeatherData} from '../store/actions/weatherActions';\r\nimport './SearchForm.css'\r\n\r\nclass SearchFrom extends Component{\r\n    state = {\r\n        city: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            city: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.fetchWeatherData(this.state.city);\r\n        this.setState({\r\n            city: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container search-box\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m10 l8 offset-l2 offset-m1\">\r\n                        <div className=\"card z-depth-3\">\r\n                            <div className=\"card-content\">\r\n                                <form className=\"container\" onSubmit={this.handleSubmit}>\r\n                                    <div className=\"input-field\">\r\n                                        <label htmlFor=\"city\">City</label>\r\n                                        <input type=\"text\" className=\"input-field\" id=\"city\" value={this.state.city} onChange={this.handleChange} />\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <button className=\"btn blue\">Search</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchWeatherData: (cityName) => dispatch(fetchWeatherData(cityName))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchFrom)\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = \"70e761deab5dc24b5dab296b23a43ee5\";\r\n\r\nexport const setWeatherData = (weather) => {\r\n    return {\r\n        type: actionTypes.SET_WEATHER_DATA,\r\n        weather: weather\r\n    }\r\n};\r\n\r\nexport const fetchWeatherDataFailed = () => {\r\n    return {\r\n        type: actionTypes.FEATCH_WEATHER_DATA_FAILED\r\n    }\r\n}\r\n\r\nexport const fetchWeatherData = (cityName) => {\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/forecast?appid=${apiKey}&units=metric&q=${cityName}`;\r\n    return dispatch => {\r\n        axios.get(apiUrl)\r\n            .then(response => {\r\n                dispatch(setWeatherData(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchWeatherDataFailed());\r\n            });\r\n\r\n    }\r\n}","export const SET_WEATHER_DATA = 'SET_WEATHER_DATA';\r\nexport const FEATCH_WEATHER_DATA_FAILED = 'FETCH_WEATHER_DATA_FAILED';","const aux = (props) => props.children\r\n\r\nexport default aux;","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked.bind(this, props.index)}></div> : null\r\n);\r\n\r\nexport default Backdrop\r\n","import React from 'react'\r\nimport '../Modal/Modal.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <div>\r\n      <Backdrop show={props.show} clicked={props.modalClosed} index={props.index}/>\r\n      <div\r\n        className={\"Modal \" + props.colorCard}\r\n        style={{\r\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n          opacity: props.show ? '1' : '0'\r\n        }}\r\n        >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport './WeatherDetails.css'\r\n\r\nconst WeatherDetails = ({weatherInfo, weather, dayName, weatherIcon, cityName, hideDetails, index}) => {\r\n  const getHourlyTemp = weather.map((item, index) => {\r\n    return (\r\n      <div className=\"weather-hour-list-item\" key={index}>\r\n        <div className=\"weather-hour-time\">{item.dt_txt.substr(11, 5)}</div>\r\n        <div className=\"weather-hour-temp\">{Math.round(item.main.temp)}&#176;C</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n     <div className=\"weather-details-card\">\r\n        <div className=\"weather-details-day\">\r\n        <i className=\"material-icons close-btn\" onClick={hideDetails.bind(this, index)}>close</i>\r\n            <div className=\"weather-details-day-name\">\r\n              {dayName}\r\n            </div>\r\n            <div className=\"weather-details-day-icon\">\r\n              <i className={\"wi \" + weatherIcon}></i>\r\n            </div>\r\n            <div className=\"weather-details-day-temp\">\r\n                {weatherInfo.maxTemperature}<span className=\"units\">&#176;C</span>\r\n            </div>\r\n            <h3 className=\"city-name\">{cityName}</h3>\r\n        </div>\r\n        <div className=\"weather-hour-list\">\r\n            {getHourlyTemp}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherDetails","import React from 'react'\r\nimport './WeatherItem.css'\r\nimport 'weathericons/css/weather-icons.css';\r\nimport Aux from '../hoc/AuxHoc';\r\nimport Modal from './UI/Modal/Modal';\r\nimport WeatherDetails from './WeatherDetails';\r\n\r\nconst WeatherItem = ({ setColorCardAndIcon, getDay, getWeatherInfo, weather, showDetails, showDetailsHandler, hideDetailsHandler, cityName, index}) => {\r\n    const weatherInfo = getWeatherInfo(weather);\r\n    const cardStyle = setColorCardAndIcon(weather);\r\n    const dayName = getDay(weather);\r\n    return (\r\n        <Aux>\r\n            <div className=\"col s12 m6 l3\">\r\n                <div className={\"weather-card hoverable \" + cardStyle[0]} onClick={showDetailsHandler.bind(this, index)}>\r\n                    <div className=\"day-name\">{dayName}</div>\r\n                    <div className=\"weather-icon\">\r\n                        <i className={\"wi \" +  cardStyle[1]}></i>\r\n                    </div>\r\n                    <div className=\"weather-day-temp\">{weatherInfo.maxTemperature}<span className=\"units\">&#176;C</span></div>\r\n                    <div className=\"weather-details\">\r\n                        <div className=\"weather-humidity\">\r\n                        <i className=\"wi wi-raindrop\"></i>\r\n                            {weatherInfo.avgHumidity} %\r\n                        </div>\r\n                        <div className=\"weather-windspeed\">\r\n                            <i className=\"wi wi-small-craft-advisory\"></i>\r\n                            {weatherInfo.avgWindSpeed} <span className=\"units\">km/h</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <Modal\r\n            colorCard={cardStyle[0]}\r\n            index={index}\r\n            show={showDetails}\r\n            modalClosed={hideDetailsHandler}>\r\n            <WeatherDetails\r\n                weatherInfo={weatherInfo}\r\n                weather={weather}\r\n                dayName={dayName}\r\n                weatherIcon={cardStyle[1]}\r\n                cityName={cityName}\r\n                hideDetails={hideDetailsHandler}\r\n                index={index} />\r\n        </Modal>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default WeatherItem\r\n","import React, { Component } from 'react'\r\nimport WeatherItem from '../components/WeatherItem';\r\n\r\nexport class WeatherResult extends Component {\r\n\r\n    state = {\r\n        showWeatherDetails: {},\r\n    }\r\n\r\n    showWeatherDetailsHandler = (id) => {\r\n        this.setState({\r\n            showWeatherDetails: {\r\n                [id]: true\r\n            }\r\n        });\r\n    }\r\n\r\n    hideWeatherDetailsHandler = (id) => {\r\n        this.setState({\r\n            showWeatherDetails: {\r\n                [id]: false\r\n            }\r\n        });\r\n    }\r\n\r\n    groupByDays = (data) => {\r\n        return (data.reduce((list, item) => {\r\n            const forecastDays = item.dt_txt.substr(0, 10);\r\n            list[forecastDays] = list[forecastDays] || [];\r\n            list[forecastDays].push(item);\r\n\r\n            return list;\r\n        }, {}));\r\n    }\r\n\r\n    getDayName = (data) => {\r\n        const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\r\n    }\r\n\r\n    getWeatherInfo = (data) => {\r\n        const temperature = [];\r\n        const humidity = [];\r\n        const windSpeed = [];\r\n        data.map(el => {\r\n            temperature.push(el.main.temp);\r\n            humidity.push(el.main.humidity);\r\n            windSpeed.push((el.wind.speed * 3.6));\r\n        });\r\n\r\n        const maxTemperature = Math.round(Math.max(...temperature));\r\n        const avgHumidity = Math.round(humidity.reduce((current, next) => current + next) / humidity.length);\r\n        const avgWindSpeed = Math.round(windSpeed.reduce((current, next) => current + next) / windSpeed.length);\r\n\r\n        return {\r\n            avgHumidity,\r\n            maxTemperature,\r\n            avgWindSpeed\r\n        }\r\n    }\r\n\r\n    setColorCardAndIcon = (data) => {\r\n        const classNameArray = [];\r\n        switch(data[0].weather[0].main) {\r\n        case \"Rain\":\r\n            classNameArray.push(\"rain\");\r\n            classNameArray.push(\"wi-day-rain\");\r\n            break;\r\n        case \"Clear\":\r\n            classNameArray.push(\"sunny\");\r\n            classNameArray.push(\"wi-day-sunny\");\r\n            break;\r\n        case \"Clouds\":\r\n            classNameArray.push(\"cloudy\");\r\n            classNameArray.push(\"wi-day-cloudy\");\r\n            break;\r\n        case \"Thunderstorm\":\r\n            classNameArray.push(\"lightning\");\r\n            classNameArray.push(\"wi-day-thunderstorm\");\r\n            break;\r\n        case \"Extreme\":\r\n            classNameArray.push(\"lightning\");\r\n            classNameArray.push(\"wi-day-lightning\");\r\n            break;\r\n        case \"Snow\":\r\n            classNameArray.push(\"cloudy\");\r\n            classNameArray.push(\"wi-day-snow\");\r\n            break;\r\n        case \"Drizzle\":\r\n            classNameArray.push(\"rain\");\r\n            classNameArray.push(\"wi-day-showers\");\r\n            break;\r\n        default:\r\n            classNameArray.push(\"default\");\r\n        }\r\n        return classNameArray\r\n    }\r\n\r\n    render() {\r\n        const weatherGroupByDate = Object.values(this.groupByDays(this.props.weatherData.list)).slice(0,4);\r\n\r\n        const weatherList = weatherGroupByDate.map((weather, index) => {\r\n                return (\r\n                    <WeatherItem\r\n                        setColorCardAndIcon={this.setColorCardAndIcon}\r\n                        getWeatherInfo={this.getWeatherInfo}\r\n                        getDay={this.getDayName}\r\n                        weather={weather}\r\n                        showDetailsHandler={this.showWeatherDetailsHandler}\r\n                        showDetails={this.state.showWeatherDetails[index]}\r\n                        hideDetailsHandler={this.hideWeatherDetailsHandler}\r\n                        cityName={this.props.weatherData.city.name}\r\n                        index={index}\r\n                        key={index} />\r\n                );\r\n\r\n            });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {weatherList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherResult\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\nimport SearchForm from './container/SearchFrom';\r\nimport WeatherResult from './container/WeatherResult';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    const { weather } = this.props.weather;\r\n    const weatherResult = (weather === null) ? (null) : (<WeatherResult weatherData={weather} />)\r\n    return (\r\n      <div className=\"App\">\r\n          <SearchForm />\r\n          {weatherResult}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    weather: state.weather,\r\n    error: state.error\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initState = {\r\n    weather: null,\r\n    error: false\r\n}\r\n\r\nconst weatherReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_WEATHER_DATA:\r\n            return {\r\n                ...state,\r\n                weather: action.weather,\r\n                error: false\r\n            }\r\n        case actionTypes.FEATCH_WEATHER_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default weatherReducer","import weatherReducer from \"./weatherReducer\";\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: weatherReducer\r\n});\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}